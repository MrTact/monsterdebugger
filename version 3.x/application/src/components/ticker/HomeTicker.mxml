<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="components.*" xmlns:ticker="components.ticker.*" width="293" height="332" creationComplete="init()">
	<fx:Declarations>
		<mx:HTTPService id="tickerData" url="{MonsterDebuggerConstants.PATH_TICKER}" resultFormat="e4x" result="tickerDataHandler(event)" fault="tickerErrorHandler(event)"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[

			import com.demonsters.debugger.MonsterDebuggerConstants;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;



			private var _timer:Timer;


			[Bindable]
			private var tickerMessage:String = "Monster Debugger 3 specially made for by Digital Creative Agency De Monsters";
			private var tickerURL:String = "http://www.demonsters.com";
			private var tickerMessages:Vector.<String>;
			private var tickerURLs:Vector.<String>;
			private var _counter:int;


			public function init():void
			{
				tickerData.send();
			}


			/**
			 * The ticker data has been received
			 * @param event: Result event from the XML loader
			 */
			private function tickerDataHandler(event:ResultEvent):void
			{
				// Save the data
				var data:XML = event.result as XML;
				var tickers:XMLList = data..ticker;

				tickerMessages = new Vector.<String>(tickers.length());
				tickerURLs = new Vector.<String>(tickers.length());

				var i:int = 0;
				for each (var t:XML in tickers) {
					tickerMessages[i] = t.message;
					tickerURLs[i] = t.url;
					i++;
				}

				if (tickerMessages.length > 0) {
					tickerMessage = tickerMessages[0];
					tickerURL = tickerURLs[0];
					_counter = 0;
					counterNavigation.visible = false;
					if (tickerMessages.length > 1) {
						_timer = new Timer(1000 * 60 * 5);
						_timer.addEventListener(TimerEvent.TIMER, timer);
						_timer.start();
						counterNavigation.counter = (_counter + 1) + "/" + tickerMessages.length;
						counterNavigation.visible = true;
					}
				}

			}


			private function timer(event:TimerEvent):void
			{
				_counter++;
				if (_counter == tickerMessages.length) {
					_counter = 0;
				}
				tickerMessage = tickerMessages[_counter];
				tickerURL = tickerURLs[_counter];

				counterNavigation.counter = (_counter + 1) + "/" + tickerMessages.length;
			}


			/**
			 * The ticker data can't be loaded
			 * Probably no internet connection
			 * @param event: Error from the XML loader
			 */
			private function tickerErrorHandler(event:FaultEvent):void
			{
				//
			}


			private function advertisementClick(event:Event):void
			{
				if (event.target == advertisementLabel) {
					if (tickerURL != "") {
						navigateToURL(new URLRequest(tickerURL));
					}
				}
			}

			private function next():void
			{
				_counter++;
				if (_counter == tickerMessages.length || _counter < 0) {
					_counter = 0;
				}
				tickerMessage = tickerMessages[_counter];
				tickerURL = tickerURLs[_counter];

				counterNavigation.counter = (_counter + 1) + "/" + tickerMessages.length;
			}

			private function previous():void
			{
				_counter--;
				if (_counter < 0) {
					_counter = tickerMessages.length - 1;
				}
				tickerMessage = tickerMessages[_counter];
				tickerURL = tickerURLs[_counter];

				counterNavigation.counter = (_counter + 1) + "/" + tickerMessages.length;
			}
		]]>
	</fx:Script>
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<mx:Image source="@Embed('../../../assets/monster_home.png')"/>
	<s:Label id="advertisementLabel" text="{tickerMessage}" x="21" y="20" color="#000000" fontWeight="bold" width="248" click="advertisementClick(event)" height="60" textAlign="center" verticalAlign="middle"/>
	<ticker:TickerNavigationLight id="counterNavigation" counter="0" nextItem="next()" previousItem="previous()" x="120" y="88"/>
</s:SkinnableContainer>