<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" width="600" height="300" title="Monster Debugger - Stacktrace" showStatusBar="false" creationComplete="onCreationComplete()" initialize="onInitialize()">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Script>
		<![CDATA[

			import com.demonsters.debugger.MonsterDebuggerMenu;
			import com.demonsters.debugger.MonsterDebuggerUtils;
			import mx.collections.ArrayCollection;

			private var _stack:ArrayCollection;


			/**
			 * Set the data in the trace window
			 * @param item: The object containing all the data
			 */
			public function setData(data:XML):void
			{
				// Save the item
				_stack = new ArrayCollection();
				for each (var item:XML in data..node) {
					var obj:Object = {method:item.@method, file:item.@file, line:item.@line};
					_stack.addItem(obj);
				}
			}


			private function onInitialize():void
			{
				visible = false;
			}


			/**
			 * The application is ready
			 */
			private function onCreationComplete():void
			{
				MonsterDebuggerUtils.loadWindowOptions(nativeWindow, "com.demonsters.debugger.StackWindow");
				visible = true;
				
				// Set on top
				if (MonsterDebuggerMenu.mainWindow.alwaysInFront) {
					alwaysInFront = true;
				}
				
				// Add event listener to the stage
				stage.addEventListener(KeyboardEvent.KEY_UP, function(event:KeyboardEvent):void {
					if (event.charCode == 27) {
						close();
						// The users pressed ESC
					}
				});
				
				nativeWindow.addEventListener(Event.CLOSING, saveWindowOptions, false, 0, true);
			}
			
			
			private function saveWindowOptions(e:Event):void
			{
				MonsterDebuggerUtils.saveWindowOptions(nativeWindow, "com.demonsters.debugger.StackWindow");
			}
			
		]]>
	</fx:Script>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace panels "components.panels.*";

			.data {
			backgroundAlpha: 1;
			backgroundColor: #FFFFFF;
			alternatingItemColors: #F0F0F0, #FFFFFF;
			horizontalGridLines: false;
			letterSpacing: 0;
			horizontalGridLineColor: #B2B2B2;
			verticalGridLineColor: #B2B2B2;
			rollOverColor: #BDEAF5;
			textRollOverColor: #000000;
			borderThickness: 0;
			border-style:none;
			selectionColor: #63BACF;
			color: #000000;
			textSelectedColor: #000000;
			textIndent: 0;
			dropShadowEnabled: false;
			text-align:left;
			padding-left:20;
			fontWeight: normal;
			symbolColor: #545454;
		}

		.customScrollBarStyle
		{
			thumb-skin: ClassReference("skins.scrollbar.vertical.ScrollbarThumbSkin");
			track-skin: ClassReference("skins.scrollbar.vertical.ScrollbarTrackSkin");
			down-arrow-skin: Embed(source="../../../assets/scroll_bar_button_down.png");
			up-arrow-skin: Embed(source="../../../assets/scroll_bar_button_up.png");
		}
		
	</fx:Style>
	<mx:DataGrid width="100%" height="100%" selectionDuration="0" headerBackgroundSkin="skins.datagrid.DatagridHeader" headerSeparatorSkin="skins.datagrid.DatagridHeaderDivider" dataProvider="{_stack}" styleName="data" verticalScrollBarStyleName="customScrollBarStyle" headerHeight="21" rowHeight="23">
		<mx:columns>
			<mx:DataGridColumn headerText="method" dataField="method" width="120">
				<mx:itemRenderer>
					<fx:Component>
						<mx:Label text="{data['method']}" color="{data['color']}" paddingLeft="5" paddingRight="5" truncateToFit="true"/>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="file" dataField="file" editable="false">
				<mx:itemRenderer>
					<fx:Component>
						<mx:Label text="{data['file']}" color="{data['color']}" paddingLeft="5" paddingRight="5" truncateToFit="true"/>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="line" dataField="line" editable="false" width="40">
				<mx:itemRenderer>
					<fx:Component>
						<mx:Label text="{data['line']}" color="{data['color']}" paddingLeft="5" paddingRight="5" textAlign="right" truncateToFit="true"/>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
</s:Window>
